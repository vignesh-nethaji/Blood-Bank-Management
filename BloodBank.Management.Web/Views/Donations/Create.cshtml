@model BloodBank.Management.Models.Entity.Donation

@{
    ViewBag.Title = "Create";
}


<div class="app-content">
    <div class="root-description">
        <span>Home</span> / <span>Donation</span>  / <span>Add Donation</span>
    </div>

    <div class="blood-unity-box-card">
        <div class="blood-unity-box-card-header">
            <div class="row">
                <div class="col-sm-6">
                    <div class="blood-unity-box-card-title">
                        <span class="blood-unity-box-card-header-icon">
                            <i class="fa fa-user-plus blood-unity-box-card-header-icon" aria-hidden="true"></i>
                        </span>
                        <b>Add Donation</b>
                    </div>
                </div>
                @*<div class="col-sm-6">
                    <button class="add-btn">
                        <span class="blood-unity-box-card-header-icon">
                            <i class="fa fa-user-plus blood-unity-box-card-header-icon" aria-hidden="true"></i>
                        </span>
                        @Html.ActionLink("Add Donation", "Create")
                    </button>
                </div>*@
            </div>

        </div>
        <div class="blood-unity-box-card-content">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group mb-3">
                @Html.LabelFor(model => model.DonorId, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.DonorId, new SelectList(ViewBag.Donors, "Id", "Name", Model?.DonorId == null ? 0 : Model.DonorId), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DonorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.RecipientId, htmlAttributes: new { @class = "control-label col-md-2  mb-1" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.RecipientId, new SelectList(ViewBag.Recipients, "Id", "Name", Model?.RecipientId == null ? 0 : Model.RecipientId), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RecipientId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.DonationDate, htmlAttributes: new { @class = "control-label col-md-2  mb-1" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.DonationDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DonationDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2  mb-1" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="mt-3 col-sm-12 text-right">
                    <button type="submit" class="btn btn-default save-btn">
                        <i class="fa fa-plus pr-5" aria-hidden="true"></i> Save
                    </button>
                </div>
            </div>


        </div>

    </div>

</div>





<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DonorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DonorId, new SelectList(ViewBag.Donors, "Id", "Name", Model?.DonorId == null ? 0 : Model.DonorId), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DonorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RecipientId, new SelectList(ViewBag.Recipients, "Id", "Name", Model?.RecipientId == null ? 0 : Model.RecipientId), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecipientId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DonationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DonationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DonationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
